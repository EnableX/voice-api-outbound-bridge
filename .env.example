# Access Credentials for API

  # Your APP ID after creation of application on https://portal.enablex.io/
  # Example - 5f1e99bf90ce3c3ccsc52e6462
  ENABLEX_APP_ID=
  # Your APP KEY after creation of application on https://portal.enablex.io/
  # Example - Ry3uEurydeSyTuReXaDuMe9u7ysasadd2d2d2by
  ENABLEX_APP_KEY=

# Set node port on which this service will run
  SERVICE_PORT=

# Webhook - EnableX will send HTTP requests to your application after certain events occur.
  # If you have deployed this service on a web server which is publicly accessible,
    # set the public URL. Example - `https://{PUBLIC_URL}`
  # If you want to test this service on a web server running locally on your own computer at a given port, with ngrok, you can generate URL that tunnels requests to your web server running locally.
  # Once ngrok installed, run `./ngrok http {SERVICE_PORT}`. It should provide you a ngrok URL something similar to `https://fc6c892d6cd7.ngrok.io`
    # Set the ngrok URL. Example - `https://fc6c892d6cd7.ngrok.io`
  PUBLIC_WEBHOOK_URL=

# SSL Certificate (Self Signed or Registered)
# Make a directory called certs on the root of the project - `mkdir certs`
# Change to certs directory - `cd certs`
# Create and Install certificates - `openssl req -nodes -new -x509   -keyout example.key -out example.crt   -days 365   -subj '/CN=example.com/O=My Company Name LTD./C=US'; cat example.crt > example.ca-bundle`

  # run the server on http or https
  LISTEN_SSL=true

  # use the certificate .key [self signed or registered]
  CERTIFICATE_SSL_KEY=./certs/example.key
  # use the certificate .crt [self signed or registered]
  CERTIFICATE_SSL_CERT=./certs/example.crt
  # use the certificate CA[chain] [self signed or registered]
  CERTIFICATE_SSL_CACERTS=./certs/example.ca-bundle
